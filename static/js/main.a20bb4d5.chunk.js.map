{"version":3,"sources":["pages/Home/Home.module.scss","components/Header/Header.module.scss","components/CreatePost/CreatePost.module.scss","components/Post/Post.module.scss","components/Footer/Footer.module.scss","components/FriendPreview/FriendPreview.module.scss","pages/Friends/Friends.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Header/index.jsx","components/Footer/index.jsx","libs/http.js","components/CreatePost/index.jsx","pages/NewPost/index.jsx","pages/Messages/index.jsx","components/FriendPreview/index.jsx","pages/Friends/index.jsx","components/inData /index.jsx","components/MessagePreview/index.jsx","components/Post/index.jsx","pages/Home/index.jsx","App.js","index.js"],"names":["module","exports","Header","props","name","links","link","label","CheckActive","resolved","useResolvedPath","useMatch","path","pathname","end","styles","active","className","header","map","item","index","to","Footer","year","Date","getFullYear","footer","BASE_URL","http","resource","fetch","then","response","json","CreatePost","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","useEffect","author","text","date","toISOString","photo","createPost","__author","value","onChange","e","target","id","type","placeholder","required","onClick","event","data","preventDefault","method","headers","body","JSON","stringify","alert","cols","rows","NewPost","Messages","FriendPreview","friend","src","alt","Friends","friendsList","setFriendsList","InData","formatRelative","locale","it","MessagePreview","sender","message","Post","post","window","location","href","deleteBtn","formatDistance","addSuffix","friends","messages","posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","reverse","home","grid","createPostBtn","INIT_STATE","nav","reducer","state","action","App","useReducer","dispatch","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a20bb4d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"createPostBtn\":\"Home_createPostBtn__1BGTQ\",\"friend\":\"Home_friend__eOEhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\",\"deleteBtn\":\"Post_deleteBtn__1bIB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friends\":\"Friends_Friends__2IY9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","import styles from \"./Header.module.scss\"\nimport { Link, useMatch, useResolvedPath } from 'react-router-dom';\n\nconst Header = (props) => {\n    const name = props.name || \"App\";\n    const links = props.links|| [{ link:\"\", label: \"Link\" }];\n\n    const CheckActive = (link) => {\n      const resolved = useResolvedPath(link);\n    \n      const match = useMatch ({ path: resolved.pathname, end: true });\n    \n      return match ? styles.active : \"\";\n    }\n\n \n\n  return (\n    <header className={styles.header}>\n      <h1>{name}</h1>\n      <nav >\n        <ul>\n\n          {links.map((item, index) => \n            <li key={index}>\n          <Link className={CheckActive(item.link)} to={item.link}>{item.label}</Link>\n            </li>\n          )}\n\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import styles from \"./Footer.module.scss\";\n\n\nconst Footer = () => {\n  const year = new Date().getFullYear;\n  return (\n    <footer className={styles.footer}>\n      <hr />\n      <p> Copyright Giulia Notaro {year} </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\nexport { http, httpPOST, httpDELETE };\n\n","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\nimport styles from \"./CreatePost.module.scss\";\n\nconst CreatePost = () => {\n  const [authorInput, setAuthorInput] = useState(\"\");\n  const [imgInput, setImgInput] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/posts\", formPostObj);\n    alert(\"Il post `e stato creato!\");\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      author: authorInput,\n      text: messageInput,\n      date: new Date().toISOString(),\n      photo: imgInput,\n    });\n  }, [authorInput, imgInput, messageInput]);\n\n  return (\n    <div className={styles.createPost}>\n      <form>\n        <div className={styles.__author}>\n          <input\n            value={authorInput}\n            onChange={(e) => setAuthorInput(e.target.value)}\n            name=\"author\"\n            id=\"author\"\n            type=\"text\"\n            placeholder=\"Author\"\n            required\n          />\n\n          <input\n            onChange={(e) => setImgInput(e.target.value)}\n            value={imgInput}\n            name=\"img\"\n            id=\"img\"\n            type=\"text\"\n            placeholder=\"Img URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            SEND\n          </button>\n        </div>\n\n        <textarea\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"10\"\n          placeholder=\"Message\"\n          required\n        ></textarea>\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;","import CreatePost from \"../../components/CreatePost\";\n\nconst NewPost = () => {\n  return <CreatePost />;\n};\n\nexport default NewPost;","const Messages = () => {\n    return <h1>Messagesssss</h1>;\n  };\n  \n  export default Messages;","import styles from \"./FriendPreview.module.scss\";\n\n\n\nconst FriendPreview = (props) => {\n  const data = props.data || { name: \"friend\", photo: \"https://randomuser.me/api/portraits/lego/0.jpg\" };\n \n \n \n \n  return (\n  \n  <div className={styles.friend}>\n      <img src={data.photo} alt={data.name} />\n      <p>{data.name}</p>\n      \n\n  </div>\n  \n  );\n};\n\nexport { FriendPreview };\n","import { useState, useEffect } from \"react\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\nimport { http } from \"../../libs/http\";\nimport styles from \"./Friends.module.scss\";\n\nconst Friends = () => {\n  const [friendsList, setFriendsList] = useState([]);\n\n  useEffect(() => {\n    http(\"/friends\").then((friendsList) => setFriendsList(friendsList));\n  }, []);\n\n  return (\n    <div className={styles.Friends}>\n      {friendsList.map((friend) => (\n        <FriendPreview data={friend} key={friend.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default Friends;","import { formatRelative } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\n\nconst InData = (props) => {\n  const data = props.data || {\n    date: new Date(),\n  };\n\n  return (\n    <p>\n      <small>\n        {formatRelative(new Date(data.date), new Date(), {\n          locale: it,\n        })}\n      </small>\n    </p>\n  );\n};\n\nexport { InData };\n","import { InData } from \"./../inData \";\nimport styles from \"./MessagePreview.module.scss\";\n\nconst MessagePreview = (props) => {\n  const data = props.data || {\n    text: `What?`,\n    date: new Date(),\n    sender: `User`,\n  };\n\n  return (\n    <div className={styles.message}>\n      <h5>{data.sender}</h5>\n      <InData data={data} />\n      <p>{data.text}</p>\n    </div>\n  );\n};\n\nexport { MessagePreview };\n","import { formatDistance } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\nimport { httpDELETE } from \"../../libs/http\";\nimport styles from \"./Post.module.scss\";\n\nconst Post = (props) => {\n  const data = props.data || {\n    author: \"User\",\n    text: \"text\",\n    date: new Date(),\n    photo:\n      \"https://images.unsplash.com/photo-1639512398860-be15f48100ea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1024&q=80\",\n  };\n\n  const handleDeletePost = () => {\n    httpDELETE(`/posts/${props.data.id}`).then(() => {});\n    alert(`Post by ${props.data.author} was deleted`);\n    window.location.href = \"/\";\n  };\n\n  return (\n    <article className={styles.post}>\n      <button onClick={handleDeletePost} className={styles.deleteBtn}>\n        X\n      </button>\n\n      <h3>{data.author}</h3>\n      <p>\n        <small>\n          {formatDistance(new Date(data.date), new Date(), {\n            addSuffix: true,\n            locale: it,\n          })}\n        </small>\n      </p>\n      <p>{data.text}</p>\n\n      {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n\n      {/*\n      Per gestire condizioni più complesse posso richiamare una funzione \n      \n      hasImage(data.photo) \n      */}\n    </article>\n  );\n};\n\nexport { Post };","import { useState, useEffect } from \"react\";\n\n\nimport { FriendPreview } from \"../../components/FriendPreview\";\nimport { MessagePreview } from \"../../components/MessagePreview\";\nimport { Post } from \"../../components/Post\";\nimport { http } from \"./../../libs/http\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Home.module.scss\";\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n  const [friendsPreview, setFriendsPreview] = useState(friends);\n  const [allPosts, setAllPosts] = useState(posts);\n  const [messagesPreview, setMessagesPreview] = useState(messages);\n\n  // GETTER -> const friendPreview = [];\n  // SETTER -> friendPreview = [...]\n\n  // Esegui del codice quando il componente è inizializzato (montato in pagina)\n  // componentDidMount() --> simile a \"DOMContentLoaded\" ma solo per il componente\n  useEffect(() => {\n    // fetch(\"https://edgemony-backend.herokuapp.com/friends?_limit=4\")\n    //   .then((response) => response.json())\n    //   .then((data) => setFriendsPreview(data));\n\n    http(\"/friends?_limit=4\").then((data) => setFriendsPreview(data));\n    http(\"/messages?_limit=4\").then((data) => setMessagesPreview(data));\n    http(\"/posts\").then((data) => setAllPosts(data.reverse()));\n\n    // Promise.all([\n    //   http(\"/friends?_limit=4\"),\n    //   http(\"/messages?_limit=4\"),\n    //   http(\"/posts\")\n    // ]).then((data) => console.log(data[0]))\n  }, []);\n\n  return (\n    <section className={styles.home}>\n      <h3>Bevenuto utente</h3>\n      <div className={styles.grid}>\n        <aside>\n          {friendsPreview.map((friend, index) => (\n            <FriendPreview key={index} data={friend} />\n          ))}\n        </aside>\n        <main>\n          <Link to=\"/new-post\">\n            <button className={styles.createPostBtn}>\n              + Create a new post!\n            </button>\n          </Link>\n          {allPosts.map((post, index) => (\n            <Post key={index} data={post} />\n          ))}\n        </main>\n        <aside>\n          {messagesPreview.map((message, index) => (\n            <MessagePreview key={index} data={message} />\n          ))}\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;","import { useReducer } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport NewPost from \"./pages/NewPost\";\nimport Messages from \"./pages/Messages\";\nimport Friends from \"./pages/Friends\";\n\nimport Home from \"./pages/Home\";\n\nconst INIT_STATE = {\n  name: \"Feisbrut\",\n  nav: [\n    { link: \"/\", label: \"Home\" },\n    { link: \"/messages\", label: \"Messages\" },\n    { link: \"/friends\", label: \"Friends\" },\n  ],\n  friendsPreview: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"change-name\":\n      return { ...state, name: \"Feisbell\" };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  return (\n    <div>\n      <Header name={state.name} links={state.nav} />\n\n      <button onClick={() => dispatch({ type: \"change-name\" })}>\n        Cambia nome\n      </button>\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/new-post\" element={<NewPost />} />\n        <Route path=\"/messages\" element={<Messages />} />\n        <Route path=\"/friends\" element={<Friends />} />\n      </Routes>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}