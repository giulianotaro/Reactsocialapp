{"version":3,"sources":["pages/Friends/Friends.module.scss","components/Pagination/Pagination.module.scss","pages/Home/Home.module.scss","components/Header/Header.module.scss","components/CreatePost/CreatePost.module.scss","components/Post/Post.module.scss","components/Footer/Footer.module.scss","components/Modal/Modal.module.scss","components/FriendPreview/FriendPreview.module.scss","pages/Login/Login.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Header/index.jsx","components/Footer/index.jsx","libs/http.js","components/Modal/index.jsx","components/CreatePost/index.jsx","pages/NewPost/index.jsx","pages/Messages/index.jsx","components/CreateFriend/index.jsx","components/FriendPreview/index.jsx","components/Pagination/index.jsx","libs/general.js","pages/Friends/index.jsx","pages/Login/index.jsx","components/inData /index.jsx","components/MessagePreview/index.jsx","components/Post/index.jsx","pages/Home/index.jsx","App.js","index.js"],"names":["module","exports","Header","props","name","links","link","label","CheckActive","resolved","useResolvedPath","useMatch","path","pathname","end","styles","active","className","header","style","fontFamily","font","map","item","index","to","Footer","year","Date","getFullYear","footer","BASE_URL","http","resource","fetch","then","response","json","httpPOST","data","method","headers","body","JSON","stringify","Modal","bgColor","text","background","initPost","formPostObj","author","date","toISOString","photo","isModalVisible","reducer","state","action","type","key","payload","CreatePost","useReducer","dispatch","useEffect","createPost","__author","value","onChange","e","target","id","placeholder","required","cols","rows","onClick","event","preventDefault","NewPost","Messages","CreateFriend","useState","friendName","setFriendName","friendPhoto","setFriendPhoto","setFormPostObj","isModalVisibile","setModalVisibile","createFriend","__friend","setTimeout","FriendPreview","friend","src","alt","Pagination","numOfElements","setActualButtonNum","totButtonNum","setTotButtonNum","friendsList","Math","ceil","length","paginationList","__prevAndNext","Array","keys","Friends","actualFriendsList","setActualFriendsList","actualButtonNum","__friendsList","__pagination","initialForm","username","password","Login","alert","InData","formatRelative","locale","it","MessagePreview","sender","message","Post","post","window","location","href","deleteBtn","formatDistance","addSuffix","friends","messages","posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","reverse","home","grid","createPostBtn","INIT_STATE","nav","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19bf9104.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friends\":\"Friends_Friends__2IY9Z\",\"__friendsList\":\"Friends___friendsList__319r6\",\"__pagination\":\"Friends___pagination__Z3NJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationList\":\"Pagination_paginationList__ru3We\",\"__prevAndNext\":\"Pagination___prevAndNext__2W61M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"createPostBtn\":\"Home_createPostBtn__1BGTQ\",\"friend\":\"Home_friend__eOEhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\",\"deleteBtn\":\"Post_deleteBtn__1bIB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__32mLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2rkDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","import { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\";\n\nconst Header = (props) => {\n  const name = props.name || \"App\";\n  const links = props.links || [{ link: \"/\", label: \"Link\" }];\n\n  /* Versione \"custom\", si può ottenere lo stesso risultato anche solamente\n  usando il componente NavLink\n  https://reactrouter.com/docs/en/v6/api#navlink */\n  const CheckActive = (link) => {\n    const resolved = useResolvedPath(link);\n    const match = useMatch({ path: resolved.pathname, end: true });\n\n    return match ? styles.active : \"\";\n  };\n\n  return (\n    <header className={styles.header}>\n      <h1 style={{ fontFamily: props.font }}>{name}</h1>\n      <nav>\n        <ul>\n          {links.map((item, index) => (\n            <li key={index}>\n              <Link className={CheckActive(item.link)} to={item.link}>\n                {item.label}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;","import styles from \"./Footer.module.scss\";\n\n\nconst Footer = () => {\n  const year = new Date().getFullYear;\n  return (\n    <footer className={styles.footer}>\n      <hr />\n      <p> Copyright Giulia Notaro {year} </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPOST(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPOST, httpDELETE, fillFriendsList };","import styles from \"./Modal.module.scss\";\n\nconst Modal = ({ bgColor, text }) => {\n  return (\n    <div className={styles.Modal} style={{ background: `${bgColor}` }}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default Modal;","import { useEffect, useReducer } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\nimport Modal from \"./../Modal\";\nimport styles from \"./CreatePost.module.scss\";\n\nconst initPost = {\n  formPostObj: {\n    author: \"\",\n    text: \"\",\n    date: new Date().toISOString(),\n    photo: \"\",\n  },\n  isModalVisible: false,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"update_form\":\n      return {\n        ...state,\n        formPostObj: { ...state.formPostObj, [action.key]: action.payload },\n      };\n    case \"modal\":\n      return { ...state, isModalVisible: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst CreatePost = () => {\n  const [state, dispatch] = useReducer(reducer, initPost);\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/posts\", state.formPostObj);\n    dispatch({ type: \"modal\", payload: !state.isModalVisible });\n  };\n\n  useEffect(() => {\n    dispatch({ type: \"modal\", payload: false });\n  }, [state.formPostObj]);\n\n  return (\n    <div className={styles.createPost}>\n      <form>\n        <div className={styles.__author}>\n          <input\n            value={state.formPostObj.author}\n            onChange={(e) =>\n              dispatch({\n                type: \"update_form\",\n                key: \"author\",\n                payload: e.target.value,\n              })\n            }\n            name=\"author\"\n            id=\"author\"\n            type=\"text\"\n            placeholder=\"Author\"\n            required\n          />\n          <input\n            value={state.formPostObj.photo}\n            onChange={(e) =>\n              dispatch({\n                type: \"update_form\",\n                key: \"photo\",\n                payload: e.target.value,\n              })\n            }\n            name=\"img\"\n            id=\"img\"\n            type=\"text\"\n            placeholder=\"Img URL\"\n          />\n        </div>\n        <textarea\n          value={state.formPostObj.text}\n          onChange={(e) =>\n            dispatch({\n              type: \"update_form\",\n              key: \"text\",\n              payload: e.target.value,\n            })\n          }\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"10\"\n          placeholder=\"Message\"\n          required\n        ></textarea>\n        <button type=\"submit\" onClick={handleSendBtn}>\n          SEND\n        </button>\n        {state.isModalVisible && (\n          <Modal bgColor=\"lightskyblue\" text=\"Il post è stato aggiunto\" />\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;\n","import CreatePost from \"../../components/CreatePost\";\n\nconst NewPost = () => {\n    return (\n        <CreatePost />\n    )\n}\n\nexport default NewPost;","const Messages = () => {\n    return <h1>Messagesssss</h1>;\n  };\n  \n  export default Messages;","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\nimport Modal from \"./../Modal\";\nimport styles from \"./CreateFriend.module.scss\";\n\nconst CreateFriend = () => {\n  const [friendName, setFriendName] = useState(\"\");\n  const [friendPhoto, setFriendPhoto] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n  const [isModalVisibile, setModalVisibile] = useState(false);\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/friends\", formPostObj);\n\n    setModalVisibile(true);\n    setTimeout(() => {\n      setModalVisibile(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      name: friendName,\n      photo: friendPhoto,\n    });\n  }, [friendName, friendPhoto]);\n\n  return (\n    <div className={styles.createFriend}>\n      {isModalVisibile && (\n        <Modal bgColor=\"lightgreen\" text=\"Hai un nuovo amico alla lista!\" />\n      )}\n      <form>\n        <div className={styles.__friend}>\n          <input\n            value={friendName}\n            onChange={(e) => setFriendName(e.target.value)}\n            name=\"friend\"\n            id=\"friend\"\n            type=\"text\"\n            placeholder=\"Friend name\"\n            required\n          />\n\n          <input\n            onChange={(e) => setFriendPhoto(e.target.value)}\n            value={friendPhoto}\n            name=\"photo\"\n            id=\"photo\"\n            type=\"text\"\n            placeholder=\"Photo URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            ADD\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateFriend;","import styles from \"./FriendPreview.module.scss\";\n\n\n\nconst FriendPreview = (props) => {\n  const data = props.data || { name: \"friend\", photo: \"https://randomuser.me/api/portraits/lego/0.jpg\" };\n \n \n \n \n  return (\n  \n  <div className={styles.friend}>\n      <img src={data.photo} alt={data.name} />\n      <p>{data.name}</p>\n      \n\n  </div>\n  \n  );\n};\n\nexport { FriendPreview };\n","import { useState, useEffect } from \"react\";\nimport { http } from \"./../../libs/http\";\nimport { arrayGenerator } from \"./../../libs/general\";\nimport styles from \"./Pagination.module.scss\";\n\nconst Pagination = ({ setActualButtonNum }) => {\n  const [totButtonNum, setTotButtonNum] = useState([]);\n\n  useEffect(() => {\n    http(`/friends`).then((friendsList) => {\n      setTotButtonNum(Math.ceil(friendsList.length / 10));\n    });\n  });\n\n  return (\n    <ul className={styles.paginationList}>\n      <button className={styles.__prevAndNext}>← Prev</button>\n      {arrayGenerator(totButtonNum).map((index) => (\n        <li key={index}>\n          <button onClick={() => setActualButtonNum(index + 1)}>\n            {index + 1}\n          </button>\n        </li>\n      ))}\n      <button className={styles.__prevAndNext}>Next →</button>\n    </ul>\n  );\n};\n\nexport default Pagination;","\nconst arrayGenerator = (numOfElements) => {\n    return [...Array(numOfElements).keys()];\n  };\n  \n  export { arrayGenerator };","import { useState, useEffect } from \"react\";\nimport CreateFriend from \"../../components/CreateFriend\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\n// import Pagination from \"./../../components/Pagination\";\nimport { http } from \"../../libs/http\";\nimport styles from \"./Friends.module.scss\";\n\nimport Pagination from \"../../components/Pagination\";\n\nconst Friends = () => {\n  const [actualFriendsList, setActualFriendsList] = useState([]);\n  const [actualButtonNum, setActualButtonNum] = useState(1);\n\n  useEffect(() => {\n    http(`/friends?_page=${actualButtonNum}`).then((friendsList) =>\n      setActualFriendsList(friendsList)\n    );\n  }, [actualButtonNum]);\n\n  return (\n    <div className={styles.Friends}>\n      <CreateFriend />\n\n      <div className={styles.__friendsList}>\n        {actualFriendsList.map((friend) => (\n          <FriendPreview data={friend} key={friend.id} />\n        ))}\n      </div>\n\n      <div className={styles.__pagination}>\n        <Pagination setActualButtonNum={setActualButtonNum} />\n      </div>\n    </div>\n  );\n};\n\nexport default Friends;","import { useReducer } from \"react\";\nimport styles from \"./Login.module.scss\";\n\nconst initialForm = {\n  username: \"\",\n  password: \"\",\n};\n\n/* const Button = () => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setUserData({\n      username,\n      password,\n    });\n  }; */\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"update_input\":\n      return {\n        ...state,\n        [action.key]: action.value,\n      };\n    case \"input_none\":\n      return { ...state, \n      value:false};\n\n    default:\n      return state;\n  }\n}\n\nfunction Login() {\n  const [state, dispatch] = useReducer(reducer, initialForm);\n\n  return (\n    <form className={styles.Login}>\n      <input\n        value={state.username}\n        onChange={(e) =>\n          dispatch({\n            type: \"update_input\",\n            value: e.target.value,\n            key: \"username\",\n          })\n        }\n        placeholder=\"Username\"\n        required\n      />\n      <input\n        value={state.password}\n        onChange={(e) =>\n          dispatch({\n            type: \"update_input\",\n            value: e.target.value,\n            key: \"password\",\n          })\n        }\n        placeholder=\"Password\"\n        required\n      />\n\n      <button\n        onClick={() => {\n          alert(\"OK, ACCESSO EFFETTUATO.\");\n        }}\n      >\n        Accedi\n      </button>\n    </form>\n  );\n}\n\nexport default Login;\n","import { formatRelative } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\n\nconst InData = (props) => {\n  const data = props.data || {\n    date: new Date(),\n  };\n\n  return (\n    <p>\n      <small>\n        {formatRelative(new Date(data.date), new Date(), {\n          locale: it,\n        })}\n      </small>\n    </p>\n  );\n};\n\nexport { InData };\n","import { InData } from \"./../inData \";\nimport styles from \"./MessagePreview.module.scss\";\n\nconst MessagePreview = (props) => {\n  const data = props.data || {\n    text: `What?`,\n    date: new Date(),\n    sender: `User`,\n  };\n\n  return (\n    <div className={styles.message}>\n      <h5>{data.sender}</h5>\n      <InData data={data} />\n      <p>{data.text}</p>\n    </div>\n  );\n};\n\nexport { MessagePreview };\n","import { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\nimport { httpDELETE } from \"../../libs/http\";\n\nimport Modal from \"./../Modal\";\nimport styles from \"./Post.module.scss\";\n\nconst Post = (props) => {\n  const data = props.data || {\n    author: \"User\",\n    text: \"text\",\n    date: new Date(),\n    photo:\n      \"https://images.unsplash.com/photo-1639512398860-be15f48100ea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1024&q=80\",\n  };\n\n  const handleDeletePost = () => {\n    httpDELETE(`/posts/${props.data.id}`).then(() => {});\n    setModalVisibile(true);\n\n    setTimeout(() => {\n      setModalVisibile(false);\n      window.location.href = \"/\";\n    }, 3000);\n  };\n\n  const [isModalVisible, setModalVisibile] = useState(false);\n\n  return (\n    <article className={styles.post}>\n      {isModalVisible && (\n        <Modal bgColor=\"lightcoral\" text=\"Il post è stato rimosso\" />\n      )}\n      <button onClick={handleDeletePost} className={styles.deleteBtn}>\n        X\n      </button>\n\n      <h3>{data.author}</h3>\n      <p>\n        <small>\n          {formatDistance(new Date(data.date), new Date(), {\n            addSuffix: true,\n            locale: it,\n          })}\n        </small>\n      </p>\n      <p>{data.text}</p>\n\n      {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n\n      {/*\n      Per gestire condizioni più complesse posso richiamare una funzione \n      \n      hasImage(data.photo) \n      */}\n    </article>\n  );\n};\n\nexport { Post };","import { useState, useEffect } from \"react\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\nimport { MessagePreview } from \"../../components/MessagePreview\";\nimport { Post } from \"../../components/Post\";\nimport { http } from \"./../../libs/http\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Home.module.scss\";\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n  const [friendsPreview, setFriendsPreview] = useState(friends);\n  const [allPosts, setAllPosts] = useState(posts);\n  const [messagesPreview, setMessagesPreview] = useState(messages);\n\n  // GETTER -> const friendPreview = [];\n  // SETTER -> friendPreview = [...]\n\n  // Esegui del codice quando il componente è inizializzato (montato in pagina)\n  // componentDidMount() --> simile a \"DOMContentLoaded\" ma solo per il componente\n  useEffect(() => {\n    // fetch(\"https://edgemony-backend.herokuapp.com/friends?_limit=4\")\n    //   .then((response) => response.json())\n    //   .then((data) => setFriendsPreview(data));\n\n    http(\"/friends?_limit=4\").then((data) => setFriendsPreview(data));\n    http(\"/messages?_limit=4\").then((data) => setMessagesPreview(data));\n    http(\"/posts\").then((data) => setAllPosts(data.reverse()));\n\n    // Promise.all([\n    //   http(\"/friends?_limit=4\"),\n    //   http(\"/messages?_limit=4\"),\n    //   http(\"/posts\")\n    // ]).then((data) => console.log(data[0]))\n  }, []);\n\n  return (\n    <section className={styles.home}>\n      <h3>Bevenuto utente</h3>\n      <div className={styles.grid}>\n        <aside>\n          {friendsPreview.map((friend, index) => (\n            <FriendPreview key={index} data={friend} />\n          ))}\n        </aside>\n        <main>\n          <Link to=\"/new-post\">\n            <button className={styles.createPostBtn}>\n              + Create a new post!\n            </button>\n          </Link>\n          {allPosts.map((post, index) => (\n            <Post key={index} data={post} />\n          ))}\n        </main>\n        <aside>\n          {messagesPreview.map((message, index) => (\n            <MessagePreview key={index} data={message} />\n          ))}\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;","import { useReducer } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport NewPost from \"./pages/NewPost\";\nimport Messages from \"./pages/Messages\";\nimport Friends from \"./pages/Friends\";\nimport Login from \"./pages/Login\";\n\nimport Home from \"./pages/Home\";\n\nconst INIT_STATE = {\n  name: \"FeisBell\",\n  nav: [\n    { link: \"/\", label: \"Home\" },\n    { link: \"/messages\", label: \"Messages\" },\n    { link: \"/friends\", label: \"Friends\" },\n    { link: \"/login\", label: \"Login\" },\n  ],\n  friendsPreview: [],\n  fontFamily: \"\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"change-name\":\n      return { ...state, name: \"FeisBrutt\" };\n    case \"change-font\":\n      return { ...state, fontFamily: \"Arial\" };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  return (\n    <div>\n      <Header name={state.name} font={state.fontFamily} links={state.nav} />\n\n      <button\n        onClick={() => {\n          dispatch({ type: \"change-name\" });\n          dispatch({ type: \"change-font\" });\n        }}\n      >\n        Cambia nome\n      </button>\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/new-post\" element={<NewPost />} />\n        <Route path=\"/messages\" element={<Messages />} />\n        <Route path=\"/friends\" element={<Friends />} />\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}